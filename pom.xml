<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- Commented out because of all the obsolete plugins/dependencies -->
    <!--
    <parent>
        <groupId>fi.vm.sade.generic</groupId>
        <artifactId>build-parent</artifactId>
        <version>9.0-SNAPSHOT</version>
    </parent>
    -->
    <groupId>fi.vm.sade.viestintapalvelu</groupId>
    <artifactId>viestintapalvelu</artifactId>
    <version>14.8-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Viestintapalvelu</name>

    <modules>
        <module>common</module>
        <module>viestintapalvelu-service</module>
        <module>viestintapalvelu-ui</module>
        <module>ryhmasahkoposti-api</module>
        <module>ryhmasahkoposti-service</module>
        <module>ajastuspalvelu-api</module>
        <module>ajastuspalvelu-service</module>
        <module>viestintapalvelu-api</module>
    </modules>

    <properties>
        <!-- build-parent properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <buildversion_prefix />

        <ant-contrib.version>1.0b3</ant-contrib.version>

        <checkstyle.plugin.version>2.9.1</checkstyle.plugin.version>
        <checkstyle.excludes>**/generated/**/*,**/com/**/*,**/org/**/*,**/net/**/*,**/*Mock.java</checkstyle.excludes>
        <checkstyle.skip>false</checkstyle.skip>
        <checkstyle.failsOnError>true</checkstyle.failsOnError>
        <checkstyle.consoleOutput>true</checkstyle.consoleOutput>
        <checkstyle.configLocation><![CDATA[http://pulpetti.hard.ware.fi:9000/sonar/profiles/export?format=checkstyle&amp;language=java&amp;name=SonarWayWithFindbugsAndOPHCheckstyle]]></checkstyle.configLocation>

        <clover.version>3.3.0</clover.version>
        <clover.outputDirectory>${bamboo.data.home}/www/clover/${project.groupId}</clover.outputDirectory>
        <clover.base>${bamboo.data.home}/clover/${project.groupId}</clover.base>
        <!-- end-of-build-parent properties -->

        <assertj.version>1.6.1</assertj.version>
        <authentication-domain.version>1.0-SNAPSHOT</authentication-domain.version>
        <camel.version>2.13.2</camel.version>
        <cas-client.version>3.1.10</cas-client.version>
        <cglib.version>2.2.2</cglib.version>
        <commons.fileupload.version>1.3.2</commons.fileupload.version>
        <commons-io.version>1.3.2</commons-io.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commonscodec.version>1.2</commonscodec.version>
        <commonsbean.version>1.9.3</commonsbean.version>
        <commons-httpclient.version>3.1</commons-httpclient.version>
        <cxf.version>3.0.1</cxf.version>
        <dom4j.version>1.6.1</dom4j.version>
        <generic.version>9.4-SNAPSHOT</generic.version>
        <guava.version>13.0.1</guava.version>
        <ehcache-core.version>2.5.0</ehcache-core.version>
        <flying-saucer.version>9.0.2</flying-saucer.version>
        <flyway.version>2.1.1</flyway.version>
        <hibernate.version>4.1.0.Final</hibernate.version>
        <hsqldb.version>2.0.0</hsqldb.version>
        <http.client.version>4.2.5</http.client.version>
        <icu4j.version>3.4.4</icu4j.version>
        <itext.version>2.1.7</itext.version>
        <jackson.version>2.4.1</jackson.version>
        <jasmine-maven-plugin.version>1.3.1.3</jasmine-maven-plugin.version>
        <javassist.version>3.18.1-GA</javassist.version>
        <javax.inject.version>1</javax.inject.version>
        <javax.persistence>2.0.0</javax.persistence>
        <jaxb.version>2.1.14</jaxb.version>
        <jta.version>1.1</jta.version>
        <jaxen.version>1.1.1</jaxen.version>
        <jersey.version>2.6</jersey.version>
        <joda.version>2.1</joda.version>
        <jretrofit.version>1.1</jretrofit.version>
        <jsch.version>0.1.50</jsch.version>
        <jsoup.version>1.7.2</jsoup.version>
        <jtidy.version>4aug2000r7-dev</jtidy.version>
        <junit.version>4.11</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <mail.version>1.4.7</mail.version>
        <mockito.version>1.9.5</mockito.version>
        <organisaatio.version>11.6</organisaatio.version>
        <phantomjs.version>1.9.2</phantomjs.version>
        <phantomjs-maven-plugin.version>0.3</phantomjs-maven-plugin.version>
        <!-- jdbc4 is for JDK1.6 and jdbc41 is for JDK1.7 -->
        <postgresql.version>9.4.1209</postgresql.version>
        <powermock.version>1.6.0</powermock.version>
        <pdfbox.version>1.8.1</pdfbox.version>
        <querydsl.version>3.3.4</querydsl.version>
        <sade-generic.version>${generic.version}</sade-generic.version>
        <servlet.version>3.0.1</servlet.version>
        <springockito.version>1.0.9</springockito.version>
        <spring.version>3.2.10.RELEASE</spring.version>
        <spring-security.version>3.1.3.RELEASE</spring-security.version>
        <slf4j.version>1.7.7</slf4j.version>
        <surefire.plugin.version>2.12</surefire.plugin.version>
        <swagger.version>1.3.7</swagger.version>
        <tomcat.version>7.0.26</tomcat.version>
        <validation.version>1.0.0.GA</validation.version>
        <velocity.version>1.7</velocity.version>
        <includeBasicIntegrationTests>true</includeBasicIntegrationTests>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Hibernate -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-ehcache</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${validation.version}</version>
            </dependency>

            <!-- Hikari CP -->
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>2.4.7</version>
            </dependency>
            <!-- Postgresql -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <!-- Javax Inject -->
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${javax.inject.version}</version>
            </dependency>

            <!-- Javax Mail -->
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>mail</artifactId>
                <version>${mail.version}</version>
            </dependency>

            <!-- Java Servlet API -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet.version}</version>
            </dependency>

            <!-- Spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-expression</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Spring security -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>${spring-security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${spring-security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${spring-security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-cas</artifactId>
                <version>${spring-security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-ldap</artifactId>
                <version>${spring-security.version}</version>
            </dependency>
            <dependency>
                <groupId>fi.vm.sade.generic</groupId>
                <artifactId>generic-common</artifactId>
                <version>${generic.version}</version>
            </dependency>

            <!-- Byte Code Generation Library -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>

            <!-- Jackson JSON parsing and generation library -->
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-json-provider</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Java Secure Channel -->
            <dependency>
                <groupId>com.jcraft</groupId>
                <artifactId>jsch</artifactId>
                <version>${jsch.version}</version>
            </dependency>

            <!-- Apache Commons -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commonscodec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons.fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commonsbean.version}</version>
            </dependency>

            <dependency>
                <groupId>fi.vm.sade.java-utils</groupId>
                <artifactId>java-properties</artifactId>
                <version>0.1.0-SNAPSHOT</version>
            </dependency>

            <!-- Tomcat servlet api -->
            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>tomcat-servlet-api</artifactId>
                <version>${tomcat.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- International Components for Unicode -->
            <dependency>
                <groupId>com.ibm.icu</groupId>
                <artifactId>icu4j</artifactId>
                <version>${icu4j.version}</version>
            </dependency>

            <!-- Transaction -->
            <dependency>
                <groupId>javax.transaction</groupId>
                <artifactId>jta</artifactId>
                <version>${jta.version}</version>
            </dependency>

            <!-- PDF generation and formatting API libraries -->
            <dependency>
                <groupId>com.lowagie</groupId>
                <artifactId>itext</artifactId>
                <version>${itext.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xhtmlrenderer</groupId>
                <artifactId>flying-saucer-core</artifactId>
                <version>${flying-saucer.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xhtmlrenderer</groupId>
                <artifactId>flying-saucer-pdf</artifactId>
                <version>${flying-saucer.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity</artifactId>
                <version>${velocity.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2.2</version>
            </dependency>
            <dependency>
                <groupId>jtidy</groupId>
                <artifactId>jtidy</artifactId>
                <version>${jtidy.version}</version>
            </dependency>

            <!-- HTML parsing -->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>

            <!-- Java date and time API -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.version}</version>
            </dependency>

            <!-- XML document handling -->
            <dependency>
                <groupId>dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>${dom4j.version}</version>
            </dependency>
            <dependency>
                <groupId>jaxen</groupId>
                <artifactId>jaxen</artifactId>
                <version>${jaxen.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Google core library for collections etc. handling -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <!-- Java byte code manipulation -->
            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javassist.version}</version>
            </dependency>

            <!-- Cache -->
            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache-core</artifactId>
                <version>${ehcache-core.version}</version>
            </dependency>

            <!-- Apache Camel -->
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-core</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-http</artifactId>
                <version>${camel.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>geronimo-servlet_3.0_spec</artifactId>
                        <groupId>org.apache.geronimo.specs</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-spring</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-spring-security</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-cxf</artifactId>
                <version>${camel.version}</version>
            </dependency>

            <!-- Apache CXF -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxws</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxrs</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-client</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>spring-web</artifactId>
                        <groupId>org.springframework</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>spring-beans</artifactId>
                        <groupId>org.springframework</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-databinding-jaxb</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-ws-security</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <!-- For some reason jaxb versions sometimes resolve to 2.1.4 and sometimes the latest version.
                 Having two different versions in class path causes problems, so we define our own version. -->
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-core</artifactId>
                <version>${jaxb.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-bindings-soap</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-features-clustering</artifactId>
                <version>${cxf.version}</version>
            </dependency>

            <!-- Swagger -->
            <dependency>
                <groupId>com.wordnik</groupId>
                <artifactId>swagger-jersey2-jaxrs_2.10</artifactId>
                <version>${swagger.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.glassfish.jersey.containers</groupId>
                        <artifactId>jersey-container-servlet-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.glassfish.jersey.media</groupId>
                        <artifactId>jersey-media-multipart</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.ws.rs</groupId>
                        <artifactId>jsr311-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Central Authentication Service -->
            <dependency>
                <groupId>org.jasig.cas</groupId>
                <artifactId>cas-client-support-distributed-ehcache</artifactId>
                <version>${cas-client.version}</version>
            </dependency>

            <!-- JPA and QSDL -->
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>com.springsource.javax.persistence</artifactId>
                <version>${javax.persistence}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.mysema.querydsl</groupId>
                <artifactId>querydsl-apt</artifactId>
                <version>${querydsl.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.mysema.querydsl</groupId>
                <artifactId>querydsl-jpa</artifactId>
                <version>${querydsl.version}</version>
            </dependency>
            <dependency>
                <groupId>com.mysema.querydsl</groupId>
                <artifactId>querydsl-codegen</artifactId>
                <version>${querydsl.version}</version>
            </dependency>
            <dependency>
                <groupId>com.mysema.querydsl</groupId>
                <artifactId>querydsl-core</artifactId>
                <version>${querydsl.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-httpclient</groupId>
                <artifactId>commons-httpclient</artifactId>
                <version>${commons-httpclient.version}</version>
            </dependency>


            <!-- Flyway DB migration-->
            <dependency>
                <groupId>com.googlecode.flyway</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway.version}</version>
            </dependency>

            <!-- TESTING -->
            <!-- AssertJ -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- JUnit test and mocking -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-easymock</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.kubek2k</groupId>
                <artifactId>springockito</artifactId>
                <version>${springockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>fi.vm.sade</groupId>
                <artifactId>embedded-tomcat</artifactId>
                <version>1.0-SNAPSHOT</version>
                <scope>test</scope>
            </dependency>

            <!-- HyperSQL DataBase for testing -->
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${hsqldb.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- HTTP client for testing -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${http.client.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jretrofit</groupId>
                <artifactId>jretrofit</artifactId>
                <version>${jretrofit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Apache PDFBox API library -->
            <dependency>
                <groupId>org.apache.pdfbox</groupId>
                <artifactId>pdfbox</artifactId>
                <version>${pdfbox.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                    <configuration>
                        <source>1.7</source>
                        <target>1.7</target>
                        <encoding>UTF-8</encoding>
                        <debug>true</debug>
                        <debuglevel>lines,vars,source</debuglevel>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.5</version>
                    <executions>
                        <execution>
                            <id>default-resources</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>resources</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-testResources</id>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>testResources</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <overwrite>true</overwrite>
                        <encoding>UTF-8</encoding>
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <!-- Unit tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.17</version>
                    <configuration>
                        <parallel>none</parallel>
                        <forkCount>1</forkCount>
                        <perCoreThreadCount>false</perCoreThreadCount>
                        <threadCount>1</threadCount>
                        <argLine>-Dfile.encoding=UTF-8</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.8</version>
                    <executions>
                        <execution>
                            <id>add-generated-sources</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.build.directory}/generated-sources/java</source>
                                    <source>${project.build.directory}/generated-sources/wsimport</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.mysema.maven</groupId>
                    <artifactId>apt-maven-plugin</artifactId>
                    <version>1.1.1</version>
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>process</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>target/generated-sources/java</outputDirectory>
                                <processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
                                <!-- If we use hibernate -->
                                <!-- <processor>com.mysema.query.apt.hibernate.HibernateAnnotationProcessor</processor> -->
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.googlecode.flyway</groupId>
                    <artifactId>flyway-maven-plugin</artifactId>
                    <version>2.0.3</version>
                    <configuration>
                        <schemas>
                            <schema>public</schema>
                        </schemas>
                        <driver>org.postgresql.Driver</driver>
                        <url>jdbc:postgresql://127.0.0.1:5432/viestinta</url>
                        <user>oph</user>
                        <password>oph</password>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>2.1</version>
                    <configuration>
                        <port>9090</port>
                        <path>/viestintapalvelu</path>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>de.smartics.maven.plugin</groupId>
                    <artifactId>hibernate4-maven-plugin</artifactId>
                    <version>0.2.0</version>
                    <executions>
                        <execution>
                            <id>export</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>hbm2ddl</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <unitName>viestinta</unitName>
                        <createOutputFile>${project.build.directory}/hibernate3/sql/schema.ddl</createOutputFile>
                        <dropOutputFile>${project.build.directory}/hibernate3/sql/drop.ddl</dropOutputFile>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.hibernate</groupId>
                            <artifactId>hibernate-core</artifactId>
                            <version>${hibernate.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.hibernate</groupId>
                            <artifactId>hibernate-ehcache</artifactId>
                            <version>${hibernate.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- Plugins taken from build-parent -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                    <executions>
                        <execution>
                            <id>write buildversion.txt</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <target>
                                    <echo message="writing target/${project.build.finalName}/${buildversion_prefix}buildversion.txt" />
                                    <echo file="target/${project.build.finalName}/${buildversion_prefix}buildversion.txt">
                                        <![CDATA[artifactId=${project.artifactId}
                                            version=${project.version}
                                            buildNumber=${project.build}
                                            branchName=${branch}
                                            vcsRevision=${revision}
                                            buildTtime=${maven.build.timestamp}
                                        ]]>
                                    </echo>
                                    <loadfile property="buildversiontxt" srcFile="target/${project.build.finalName}/${buildversion_prefix}buildversion.txt" />
                                    <echo message="${buildversiontxt}" />
                                    <echo file="target/mavenversion.txt">${project.version}</echo>
                                </target>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <configuration>
                        <webResources>
                            <resource>
                                <directory>../src/main/resources</directory>
                                <targetPath>WEB-INF/classes</targetPath>
                            </resource>
                        </webResources>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <distributionManagement>
        <repository>
            <id>oph-sade-artifactory</id>
            <name>oph-sade-artifactory-releases</name>
            <url>https://artifactory.oph.ware.fi/artifactory/oph-sade-release-local</url>
        </repository>
        <snapshotRepository>
            <id>oph-sade-artifactory</id>
            <name>oph-sade-artifactory-snapshots</name>
            <url>https://artifactory.oph.ware.fi/artifactory/oph-sade-snapshot-local</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>oph-sade-artifactory-snapshots</id>
            <url>https://artifactory.oph.ware.fi/artifactory/oph-sade-snapshot-local</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>oph-sade-artifactory-releases</id>
            <url>https://artifactory.oph.ware.fi/artifactory/oph-sade-release-local</url>
        </repository>
        <repository>
            <id>vaadin-addons</id>
            <name>Vaadin addons</name>
            <url>https://artifactory.oph.ware.fi/artifactory/vaadin-addons</url>
        </repository>
        <repository>
            <id>com.springsource.repository.bundles.release</id>
            <name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
            <url>https://artifactory.oph.ware.fi/artifactory/springsource-ebr/</url>
        </repository>
        <repository>
            <id>com.springsource.repository.bundles.external</id>
            <name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
            <url>https://artifactory.oph.ware.fi/artifactory/spring-ebr/</url>
        </repository>
        <repository>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>com.springsource.repository.maven.snapshot</id>
            <name>SpringSource Enterprise Bundle Maven Repository - SpringSource Snapshot Releases</name>
            <url>https://artifactory.oph.ware.fi/artifactory/com.springsource.repository.maven.snapshot/</url>
        </repository>
        <repository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>com.springsource.repository.maven.milestone</id>
            <name>Spring Framework Maven Milestone Releases (Maven Central Format)</name>
            <url>https://artifactory.oph.ware.fi/artifactory/com.springsource.repository.maven.milestone/</url>
        </repository>
        <repository>
            <id>atomikos</id>
            <name>Atomikos repository</name>
            <url>https://artifactory.oph.ware.fi/artifactory/atomikos/</url>
        </repository>
        <repository>
            <id>shibboleth</id>
            <name>Shibboleth</name>
            <url>https://artifactory.oph.ware.fi/artifactory/shibboleth/</url>
        </repository>
        <repository>
            <id>libs-3rd-party</id>
            <name>libs-3rd-party</name>
            <url>https://artifactory.oph.ware.fi/artifactory/libs-3rd-party</url>
        </repository>
        <repository>
            <id>bedatadriven</id>
            <name>bedatadriven</name>
            <url>https://artifactory.oph.ware.fi/artifactory/bedatadriven/</url>
        </repository>
        <repository>
            <id>cpdetector</id>
            <name>cpdetector</name>
            <url>https://artifactory.oph.ware.fi/artifactory/cpdetector</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>smartics</id>
            <url>https://www.smartics.eu/nexus/content/groups/public-group</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <!-- Some of these profiles are apparently needed by bamboo -->
    <!-- Copied from build-parent, TODO: clean unneeded profiles -->
    <profiles>
        <profile>
            <id>integration-tests-included</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>includeBasicIntegrationTests</name>
                    <value>true</value>
                </property>
            </activation>

            <build>
                <plugins>
                    <!-- Integration tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.17</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <!-- Exclude all CXF related artifacts from classpath -->
                        <configuration>
                            <includes>
                                <include>**/IT*.java</include>
                                <include>**/*IT.java</include>
                                <include>**/*ITCase.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/*PerformanceIT.java</exclude>
                            </excludes>
                            <classpathDependencyExcludes>
                                <classpathDependencyExcludes>org.apache.cxf:cxf-rt-rs-client</classpathDependencyExcludes>
                                <classpathDependencyExcludes>org.apache.cxf:cxf-rt-frontend-jaxrs</classpathDependencyExcludes>
                                <classpathDependencyExcludes>org.apache.camel:camel-cxf</classpathDependencyExcludes>
                            </classpathDependencyExcludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>checkstyle</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <configuration>
                            <excludes>${checkstyle.excludes}</excludes>
                            <skip>${checkstyle.skip}</skip>
                            <configLocation>${checkstyle.configLocation}</configLocation>
                            <failsOnError>${checkstyle.failsOnError}</failsOnError>
                            <consoleOutput>${checkstyle.consoleOutput}</consoleOutput>
                        </configuration>
                        <executions>
                            <execution>
                                <id>check</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${checkstyle.plugin.version}</version>
                        <configuration>
                            <excludes>${checkstyle.excludes}</excludes>
                            <skip>${checkstyle.skip}</skip>
                            <configLocation>${checkstyle.configLocation}</configLocation>
                            <failsOnError>${checkstyle.failsOnError}</failsOnError>
                            <consoleOutput>${checkstyle.consoleOutput}</consoleOutput>
                        </configuration>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <id>findbugs</id>
            <properties>
                <compiler.debug>true</compiler.debug>
                <findbugs.version>1.3.2</findbugs.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>antrun-findbugs</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
                                        <if>
                                            <available file="${project.build.directory}/classes/fi" />
                                            <then>
                                                <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="maven.plugin.classpath" />

                                                <property name="findbugsclasspath" refid="maven.plugin.classpath" />
                                                <property name="runtime_classpath" refid="maven.runtime.classpath" />
                                                <property name="compile_classpath" refid="maven.compile.classpath" />

                                                <mkdir dir="${project.build.directory}/findbugs" />
                                                <echo>Using localRepository: ${settings.localRepository}</echo>
                                                <findbugs output="html" outputFile="${project.build.directory}/findbugs/findbugs.html" classpath="${findbugsclasspath}" pluginlist="${settings.localRepository}/net/sourceforge/findbugs/coreplugin/${findbugs.version}/coreplugin-${findbugs.version}.jar" jvmargs="-Xmx256m" reportLevel="medium" effort="default" failOnError="true">
                                                    <sourcePath location="${project.basedir}/src/main/java" />
                                                    <class location="${project.build.directory}/classes" />
                                                    <auxClasspath>
                                                        <path refid="maven.compile.classpath" />
                                                        <path refid="maven.runtime.classpath" />
                                                        <path refid="maven.plugin.classpath" />
                                                    </auxClasspath>
                                                </findbugs>
                                            </then>
                                            <else>
                                                <echo>Skip findbugs, because directory
                                                    '${project.build.directory}/classes/fi' not found.</echo>
                                            </else>
                                        </if>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>net.sourceforge.findbugs</groupId>
                                <artifactId>coreplugin</artifactId>
                                <version>${findbugs.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>net.sourceforge.findbugs</groupId>
                                <artifactId>findbugs</artifactId>
                                <version>${findbugs.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>jaxen</groupId>
                                <artifactId>jaxen</artifactId>
                                <version>1.1</version>
                            </dependency>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>${ant-contrib.version}</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>ant</groupId>
                                        <artifactId>ant</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>javadoc</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.8.1</version>
                        <executions>
                            <execution>
                                <phase>install</phase>
                                <goals>
                                    <goal>javadoc</goal>
                                </goals>
                                <configuration>
                                    <additionalparam>-Xdoclint:none</additionalparam>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- Update build artifacts from artifactory to local maven repository.
            Used on Bamboo deployment plans update before calloing 'deploy.remote'. -->
            <id>update.artifacts</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>2.8</version>
                        <executions>
                            <execution>
                                <id>copy</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <type>${project.packaging}</type>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${project.artifactId}</artifactId>
                    <version>${project.version}</version>
                    <type>${project.packaging}</type>
                    <scope>validate</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <!-- Set default ant file for -Pdeploy.remote if -Dant.file=xxx is not spesified. -->
            <id>default-ant-file</id>
            <activation>
                <property>
                    <name>!ant.file</name>
                </property>
            </activation>
            <properties>
                <ant.file>build.xml</ant.file>
            </properties>
        </profile>
        <profile>
            <!-- Deploy artifacts to remote server. Used on Bamboo deployment plans. -->
            <id>deploy.remote</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>Deploy: ${project.version} to ${tomcat-host}</echo>

                                        <ant antfile="${project.basedir}\${ant.file}">
                                            <property name="pom.version" value="${project.version}" />
                                        </ant>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.ant</groupId>
                                <artifactId>ant-jsch</artifactId>
                                <version>1.8.1</version>
                            </dependency>
                            <dependency>
                                <groupId>com.jcraft</groupId>
                                <artifactId>jsch</artifactId>
                                <version>0.1.50</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>

            </build>
        </profile>
        <profile>
            <id>clover-clean-post</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>clean-clover-post</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <delete includeemptydirs="true" failonerror="false">
                                            <fileset dir="${clover.outputDirectory}_old">
                                                <include name="**/**" />
                                            </fileset>
                                        </delete>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>ant-contrib</groupId>
                    <artifactId>ant-contrib</artifactId>
                    <version>1.0b3</version>
                    <exclusions>
                        <exclusion>
                            <groupId>ant</groupId>
                            <artifactId>ant</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>clover-clean-pre</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>clean-clover-pre</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>Clean clover output directory from ${clover.base}.</echo>
                                        <delete includeemptydirs="true" failonerror="false">
                                            <fileset dir="${clover.base}">
                                                <include name="**/**" />
                                                <exclude name="history/**" />
                                            </fileset>
                                        </delete>
                                        <move failonerror="false" file="${clover.outputDirectory}" tofile="${clover.outputDirectory}_old" />
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>ant-contrib</groupId>
                    <artifactId>ant-contrib</artifactId>
                    <version>1.0b3</version>
                    <exclusions>
                        <exclusion>
                            <groupId>ant</groupId>
                            <artifactId>ant</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <!--
           How-to build with Clover and Sonar:

           1. clean:
               $ mvn clean -N -Pclover-clean-pre -Dbamboo.data.home=/my/path/to/bamboo
           2. test ja clover:
               $ mvn clean install -Pclover -Dbamboo.data.home=/my/path/to/bamboo
           3. deploy and test WITHOUT clover:
               $ mvn clean deploy -DscreenshotMode=true -Pjavadoc -DskipITs
           4. Sonar reports:
               $ mvn sonar:sonar -Psonar -Dsonar.jdbc.password=XXXxxxXxx -Dbamboo.data.home=/my/path/to/bamboo
           5. cleanup after successfully build:
               $ mvn clean -N -Pclover-clean-pre -Dbamboo.data.home=/my/path/to/bamboo

           On windows machine you must user following syntax on bamboo.data.home property
               -Dbamboo.data.home=c:\\\\my\\path\\to\\bamboo
           and in linux
               -Dbamboo.data.home=/my/path/to/bamboo
           -->
            <id>clover</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>maven-clover2-plugin</artifactId>
                        <version>${clover.version}</version>
                        <configuration>
                            <licenseLocation>${bamboo.data.home}/clover/clover.license</licenseLocation>
                            <outputDirectory>${clover.outputDirectory}</outputDirectory>
                            <snapshot>${clover.base}/snapshot/clover.snapshot</snapshot>
                            <cloverDatabase>${clover.base}/db/clover.db</cloverDatabase>
                            <historyDir>${clover.base}/history</historyDir>
                            <singleCloverDatabase>true</singleCloverDatabase>
                            <generateHistorical>true</generateHistorical>
                            <alwaysReport>true</alwaysReport>
                            <generateXml>true</generateXml>
                            <includesAllSourceRoots>true</includesAllSourceRoots>
                            <excludes>
                                <exclude>**/*Mock.java</exclude>
                                <exclude>**/*.scala</exclude>
                                <!-- TODO, FIXME: exclude "**/*-api/**" modules. -->
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>clover</id>
                                <goals>
                                    <goal>setup</goal>
                                    <goal>snapshot</goal>
                                </goals>
                            </execution>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>clover</goal>
                                    <goal>log</goal>
                                    <goal>save-history</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>clean-scala-files</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>Remove Scala files from target/clover directory.</echo>
                                        <delete failonerror="false" verbose="true">
                                            <fileset dir="target/clover">
                                                <include name="**/*.scala" />
                                            </fileset>
                                        </delete>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>

            </build>
            <dependencies>
                <dependency>
                    <groupId>com.cenqua.clover</groupId>
                    <artifactId>clover</artifactId>
                    <version>${clover.version}</version>
                </dependency>
                <dependency>
                    <groupId>ant-contrib</groupId>
                    <artifactId>ant-contrib</artifactId>
                    <version>1.0b3</version>
                    <exclusions>
                        <exclusion>
                            <groupId>ant</groupId>
                            <artifactId>ant</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>sonar</id>
            <properties>
                <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
                <sonar.surefire.reportsPath>${project.build.directory}/surefire-reports</sonar.surefire.reportsPath>
                <sonar.core.codeCoveragePlugin>clover</sonar.core.codeCoveragePlugin>
                <sonar.clover.reportPath>${clover.outputDirectory}/clover.xml</sonar.clover.reportPath>

                <sonar.exclusions>**/*generated*/**,com/**,org/**,net/**,**/*Mock.java</sonar.exclusions>

                <sonar.jdbc.url>jdbc:mysql://pulpetti.hard.ware.fi:3306/sonar?useUnicode=true&amp;characterEncoding=utf8</sonar.jdbc.url>
                <sonar.jdbc.driverClassName>com.mysql.jdbc.Driver</sonar.jdbc.driverClassName>
                <sonar.jdbc.username>sonar</sonar.jdbc.username>
                <sonar.jdbc.password>${sonar.jdbc.password}</sonar.jdbc.password>
                <sonar.host.url>http://pulpetti.hard.ware.fi:9000/sonar</sonar.host.url>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.codehaus.sonar-plugins</groupId>
                    <artifactId>sonar-clover-plugin</artifactId>
                    <version>2.9</version>
                </dependency>
            </dependencies>
        </profile>

        <profile><!-- profile to embed service dependency inside war in app module -->
            <id>embedService</id>
            <properties>
                <profileEnv>embedService</profileEnv>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${embedService.serviceArtifactId}</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>development</id>
            <properties>
                <env>development</env>
            </properties>
        </profile>
        <profile>
            <id>ui-development</id>
            <properties>
                <env>ui-development</env>
            </properties>
        </profile>
        <profile>
            <id>integration-test</id>
            <properties>
                <env>integration-test</env>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <property>
                                    <name>ophServerUrl</name>
                                    <!-- TODO: lue build propseista -->
                                    <value>http://luokka.hard.ware.fi</value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>system-test</id>
            <properties>
                <env>system-test</env>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <property>
                                    <name>ophServerUrl</name>
                                    <!-- TODO: lue build propseista -->
                                    <value>http://reppu.hard.ware.fi</value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>QA</id>
            <properties>
                <env>QA</env>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <property>
                                    <name>ophServerUrl</name>
                                    <!-- TODO: lue build propseista -->
                                    <value>https://testi.virkailija.opintopolku.fi</value>
                                </property>
                                <property>
                                    <name>ophServerPort</name>
                                    <value>443</value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>PRODUCTION</id>
            <properties>
                <env>PRODUCTION</env>
            </properties>
        </profile>
        <profile>
            <id>attach-schema-artifact</id>
            <activation>
                <file><exists>src/main/resources/META-INF/persistence.xml</exists></file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>attach-artifacts</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>attach-artifact</goal>
                                </goals>
                                <configuration>
                                    <artifacts>
                                        <artifact>
                                            <file>target/hibernate3/sql/schema.ddl</file>
                                            <type>ddl</type>
                                            <classifier>schema</classifier>
                                        </artifact>
                                    </artifacts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>jetty</id>
            <properties>
                <slf4j-api.scope>test</slf4j-api.scope>
            </properties>
        </profile>

        <!-- Generate db diagram on Bamboo master branch builds -->
        <profile>
            <id>generate-db-diagram</id>
            <activation>
                <property>
                    <name>branch</name>
                    <value>master</value>
                </property>
            </activation>
            <properties>
                <schema.file>${project.basedir}/target/hibernate3/sql/schema.ddl</schema.file>
                <dbdiagram.generator>/usr/sbin/sql2diagram</dbdiagram.generator>
                <dbdiagram.output>${project.basedir}/target/sql2diagram/</dbdiagram.output>
                <dbdiagram.filename>${project.artifactId}-${project.version}</dbdiagram.filename>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
                                        <if>
                                            <available file="${schema.file}" />
                                            <then>
                                                <echo>Generate DB Diagrams fom file '${schema.file}'.</echo>
                                                <mkdir dir="${dbdiagram.output}" />

                                                <!-- generate diagrams -->
                                                <exec executable="${dbdiagram.generator}">
                                                    <arg value="${schema.file}" />
                                                    <arg value="${dbdiagram.output}/${dbdiagram.filename}" />
                                                </exec>

                                                <!-- copy diagrams with name *-LATEST.* -->
                                                <copy file="${dbdiagram.output}/${dbdiagram.filename}.html"
                                                      tofile="${dbdiagram.output}/${project.artifactId}-LATEST.html"/>

                                                <copy file="${dbdiagram.output}/${dbdiagram.filename}.png"
                                                      tofile="${dbdiagram.output}/${project.artifactId}-LATEST.png"/>

                                                <!-- SCP files to pulpetti apache -->
                                                <scp todir="bamboo@pulpetti:/var/www/html/db/" trust="true"
                                                     keyfile="${user.home}/.ssh/id_rsa" passphrase="">
                                                    <fileset dir="${dbdiagram.output}">
                                                        <include name="**/*" />
                                                    </fileset>
                                                </scp>
                                            </then>
                                            <else>
                                                <echo>Skip DBDiagramGenerator, because file '${schema.file}' not found.</echo>
                                            </else>
                                        </if>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.ant</groupId>
                                <artifactId>ant-jsch</artifactId>
                                <version>1.8.1</version>
                            </dependency>
                            <dependency>
                                <groupId>com.jcraft</groupId>
                                <artifactId>jsch</artifactId>
                                <version>0.1.50</version>
                            </dependency>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>${ant-contrib.version}</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>ant</groupId>
                                        <artifactId>ant</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>performance-tests</id>
            <properties>
                <includeBasicIntegrationTests>false</includeBasicIntegrationTests>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.17</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <includes>
                                <include>**/IT*.java</include>
                                <include>**/*IT.java</include>
                                <include>**/*ITCase.java</include>
                                <include>**/*PerformanceIT.java</include>
                            </includes>
                            <classpathDependencyExcludes>
                                <classpathDependencyExcludes>org.apache.cxf:cxf-rt-rs-client</classpathDependencyExcludes>
                                <classpathDependencyExcludes>org.apache.cxf:cxf-rt-frontend-jaxrs</classpathDependencyExcludes>
                                <classpathDependencyExcludes>org.apache.camel:camel-cxf</classpathDependencyExcludes>
                            </classpathDependencyExcludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
